package problem5;
import java.util.Objects; 
import java.util.* ; 
public abstract class Person {
	private String name ; 
	private int age ; 
	private Vector<Animal> animals = new Vector<Animal>(); 
	
	private HashMap<Person , Animal> transferTo = new HashMap<>();
	private HashMap<Person , Animal> returnFrom = new HashMap<>(); 
	
	public Person(String name , int age) {
		this.name = name ; 
		this.age = age ; 
	}
	public void assignPet(Animal animal) {
		animals.add(animal); 
	}
	public void removePet(Animal animal) {
		animals.remove(animal); 
	}
	public boolean hasPets() {
		return animals.size() > 0; 
	}
	public abstract String getOccupation(); 
	public void leavePet(Person person , Animal animal) {
		if(!(person instanceof PhdStudent && animal instanceof Dog) && animals.contains(animal)) {
			animals.remove(animal); 
			person.assignPet(animal);
			transferTo.put(person , animal); 
		}
		else return ; 
	}
	public boolean hasPet(Animal animal) {
		return animals.contains(animal); 
	}
	public void returnPetFrom(Person person , Animal animal) {
		if(person.hasPet(animal)) {
			person.removePet(animal) ;
			assignPet(animal); 
			returnFrom.put(person, animal); 
		}
	}
	public Person whoReturnPet(Animal animal) {
		return returnFrom.get(animal);
	}
	public Person whoGavePet(Animal animal) {
		
	}
	public boolean equals(Object obj) {
		if(this == obj) return true;  
		if(obj == null || getClass()!=obj.getClass()) return false; 
		Person p = (Person) obj ; 
		return age == p.age && Objects.equals(name , p.name); 
	}
	public int hashCode() { 
		return Objects.hash(name , age); 
	}
	public String toString() {
		return "Name : " + name + ", age = " + age + ", has a animals : " + animals + "]"; 
	}
}